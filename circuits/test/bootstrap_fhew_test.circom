pragma circom 2.1.0;

include "bootstrap_fhew.circom";
include "circomlib/circuits/bitify.circom";

template TestUpdateDM() {
    log("\n********** TEST UpdateDM **********\n");

    var n = 2;
    var N = 3;
    var q = 16;
    var Q = 32;
    var Br = 4;
    var Bg = 8;
    
    var dr = logb(q, Br);
    var dg = logb(Q, Bg);

    var bsk[n][dr][Br][2*dg][2][N] = [[[[[[23, 27, 12], [18, 1, 30]], [[13, 0, 8], [1, 8, 18]], [[7, 24, 21], [27, 20, 1]], [[4, 8, 31], [19, 22, 0]]],
                                        [[[3, 8, 23], [5, 15, 10]], [[2, 25, 10], [24, 14, 31]], [[4, 18, 0], [5, 14, 14]], [[25, 9, 8], [9, 13, 22]]],
                                        [[[24, 9, 17], [21, 3, 15]], [[26, 10, 27], [27, 2, 13]], [[11, 15, 9], [19, 25, 29]], [[25, 18, 0], [6, 30, 6]]],
                                        [[[2, 7, 3], [19, 9, 21]], [[17, 5, 23], [22, 11, 26]], [[12, 18, 30], [12, 2, 4]], [[15, 30, 4], [31, 30, 15]]]],
   
                                       [[[[0, 26, 28], [6, 3, 27]], [[30, 17, 2], [18, 28, 30]], [[11, 15, 25], [6, 11, 24]], [[31, 1, 16], [5, 2, 16]]],
                                        [[[4, 21, 30], [29, 0, 2]], [[21, 28, 27], [7, 22, 1]], [[15, 24, 5], [12, 24, 17]], [[14, 12, 24], [30, 0, 31]]],
                                        [[[21, 2, 5], [29, 1, 1]], [[15, 7, 5], [7, 15, 23]], [[15, 17, 11], [14, 23, 21]], [[15, 16, 28], [5, 4, 5]]],
                                        [[[22, 15, 0], [25, 31, 3]], [[9, 17, 4], [13, 20, 24]], [[21, 25, 1], [6, 1, 19]], [[18, 12, 13], [20, 25, 14]]]]],
    
                                      [[[[[24, 0, 15], [20, 14, 25]], [[4, 30, 29], [30, 26, 4]], [[6, 0, 20], [29, 31, 4]], [[26, 13, 19], [25, 26, 30]]],
                                        [[[27, 5, 7], [21, 8, 29]], [[13, 28, 16], [17, 0, 12]], [[18, 19, 13], [17, 8, 1]], [[22, 11, 20], [10, 5, 1]]],
                                        [[[7, 13, 23], [5, 17, 16]], [[31, 26, 1], [14, 23, 8]], [[9, 19, 21], [31, 10, 28]], [[24, 22, 23], [18, 21, 8]]],
                                        [[[11, 28, 29], [0, 11, 1]], [[18, 19, 8], [20, 7, 0]], [[22, 25, 24], [15, 25, 5]], [[12, 1, 31], [16, 20, 12]]]],
    
                                       [[[[14, 15, 9], [3, 7, 22]], [[10, 24, 1], [0, 12, 8]], [[28, 11, 28], [4, 3, 0]], [[2, 7, 29], [25, 6, 23]]],
                                        [[[17, 3, 10], [0, 3, 17]], [[4, 31, 17], [9, 31, 18]], [[25, 28, 19], [19, 15, 28]], [[10, 6, 11], [26, 6, 22]]],
                                        [[[25, 23, 30], [26, 5, 12]], [[16, 23, 11], [24, 4, 0]], [[12, 29, 9], [2, 7, 19]], [[4, 27, 12], [17, 0, 10]]],
                                        [[[20, 9, 19], [23, 4, 28]], [[4, 30, 31], [5, 7, 18]], [[0, 0, 13], [16, 17, 24]], [[9, 10, 19], [29, 23, 23]]]]]];

    var acc_in[2][N] = [[18, 17, 30], [22, 19, 13]];
    var a[n] = [12, 7];

    var acc_res[2][N] = acc_in;
    for (var i=0; i<n; i++) {
        var ai = a[i];
        var c = (q-ai)%q;
        for (var j=0; j<dr; j++) {
            var cj = (c % Br);
            var key[2*dg][2][N] = bsk[i][j][cj];
            acc_res = AddToAccDM(N, Q, Bg)(acc_res, key);
            c \= Br;
        }
    }

    var acc_out[2][N] = UpdateDM(n, N, q, Q, Br, Bg, bsk)(acc_in, a);

    var RESULT = 1;
    for (var i=0; i<N; i++) {
        RESULT = RESULT && (acc_out[0][i] == acc_res[0][i]);
        RESULT = RESULT && (acc_out[1][i] == acc_res[1][i]);
    }

    log("RESULT: ", RESULT, "\n");
    signal output result <-- RESULT;
}


template TestAll() {
    log("\n******************** TESTING bootstrap_fhew.circom ********************\n\n");

    var total = 1;
    var res;

    res = TestUpdateDM()();
    total = total && res;

    log("********************\n", "TOTAL RESULT: ", total, "\n********************\n");
}

component main = TestAll();
